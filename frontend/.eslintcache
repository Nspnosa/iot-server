[{"E:\\projects\\iot-server\\frontend\\src\\index.js":"1","E:\\projects\\iot-server\\frontend\\src\\components\\UserLogin.js":"2","E:\\projects\\iot-server\\frontend\\src\\components\\UserSignup.js":"3"},{"size":1303,"mtime":1610242604080,"results":"4","hashOfConfig":"5"},{"size":2600,"mtime":1610239421772,"results":"6","hashOfConfig":"5"},{"size":2788,"mtime":1610239493715,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"pc9bt9",{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12","usedDeprecatedRules":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"13"},"E:\\projects\\iot-server\\frontend\\src\\index.js",["17","18","19","20","21"],"E:\\projects\\iot-server\\frontend\\src\\components\\UserLogin.js",["22","23"],"import React, { useEffect, useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\n\nfunction UserLogin() {\n  const [inputData, setInputData] = useState({\n    email: '',\n    password: '',\n  });\n  const [remember, setRemember] = useState(true);\n  const props = useSpring({ opacity: 1, from: { opacity: 0 } });\n\n  function handleInputChange(event) {\n    setInputData({\n      ...inputData,\n      [event.target.id.split('-')[0]]: event.target.value,\n    });\n    console.log(inputData);\n  }\n\n  return (\n    <animated.div style={props} className=\"user-login-container\">\n      <form className=\"user-login-form\">\n        <p className=\"user-login-title\">Welcome back, we've missed you!</p>\n        <div className=\"user-login-form-div\">\n          {/* <label htmlFor=\"email-input-element\">Email:</label> */}\n          <input\n            id=\"email-input-element\"\n            placeholder=\"Email\"\n            className=\"user-login-form-div-input\"\n            type=\"email\"\n            onChange={handleInputChange}\n            value={inputData.email}\n          />\n        </div>\n        <div className=\"user-login-form-div\">\n          {/* <label htmlFor=\"password-input-element\">Password:</label> */}\n          <input\n            placeholder=\"Password\"\n            id=\"password-input-element\"\n            className=\"user-login-form-div-input\"\n            type=\"password\"\n            onChange={handleInputChange}\n            value={inputData.password}\n          />\n        </div>\n        <div className=\"user-login-form-div\">\n          <button\n            className={`user-login-form-div-button-remember-${\n              remember ? 'on' : 'off'\n            } user-login-form-div-button-remember`}\n            onClick={(event) => {\n              event.preventDefault();\n              setRemember(!remember);\n            }}\n          ></button>\n          <label htmlFor=\"remember-me-button\">\n            <i>Remember?</i>\n          </label>\n        </div>\n        <div className=\"user-login-form-div\">\n          <button className=\"user-login-form-div-button\">Log in</button>\n        </div>\n        <div className=\"user-login-form-div\">\n          <div></div>\n          <button\n            className=\"user-create-form-div-button\"\n            onClick={(event) => {\n              event.preventDefault();\n            }}\n          >\n            Create account\n          </button>\n        </div>\n      </form>\n      <div className=\"user-login-lost-credentials-container\">\n        <a href=\"#\">\n          <i>Forgot password?</i>\n        </a>\n      </div>\n    </animated.div>\n  );\n}\n\nexport default UserLogin;\n",["24","25"],"E:\\projects\\iot-server\\frontend\\src\\components\\UserSignup.js",["26","27","28"],"import React, { useEffect, useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\n\nfunction UserSignup() {\n  const [inputData, setInputData] = useState({\n    name: '',\n    lastname: '',\n    email: '',\n    password: '',\n  });\n  const [login, setLogin] = useState(true);\n  const props = useSpring({ opacity: 1, from: { opacity: 0 } });\n\n  function handleInputChange(event) {\n    setInputData({\n      ...inputData,\n      [event.target.id.split('-')[0]]: event.target.value,\n    });\n    console.log(inputData);\n  }\n\n  return (\n    <animated.div style={props} className=\"user-signup-container\">\n      <form className=\"user-signup-form\">\n        <p className=\"user-login-title\">Oh, you are going to love this!</p>\n        <div className=\"user-login-form-div\">\n          {/* <label htmlFor=\"name-input-element\">Name:</label> */}\n          <input\n            id=\"name-input-element\"\n            placeholder=\"Name\"\n            className=\"user-login-form-div-input\"\n            type=\"text\"\n            onChange={handleInputChange}\n            value={inputData.name}\n          />\n        </div>\n        <div className=\"user-login-form-div\">\n          {/* <label htmlFor=\"lastname-input-element\">Lastname:</label> */}\n          <input\n            id=\"lastname-input-element\"\n            placeholder=\"Lastname\"\n            className=\"user-login-form-div-input\"\n            type=\"text\"\n            onChange={handleInputChange}\n            value={inputData.lastname}\n          />\n        </div>\n        <div className=\"user-login-form-div\">\n          {/* <label htmlFor=\"email-input-element\">Username:</label> */}\n          <input\n            id=\"email-input-element\"\n            placeholder=\"Email\"\n            className=\"user-login-form-div-input\"\n            type=\"email\"\n            onChange={handleInputChange}\n            value={inputData.email}\n          />\n        </div>\n        <div className=\"user-login-form-div\">\n          {/* <label htmlFor=\"password-input-element\">Password:</label> */}\n          <input\n            placeholder=\"Password\"\n            id=\"password-input-element\"\n            className=\"user-login-form-div-input\"\n            type=\"password\"\n            onChange={handleInputChange}\n            value={inputData.password}\n          />\n        </div>\n        <div className=\"user-login-form-div\">\n          <button className=\"user-login-form-div-button\">Create account</button>\n        </div>\n        <div className=\"user-login-form-div\">\n          <div></div>\n          <button\n            className=\"user-create-form-div-button\"\n            onClick={(event) => {\n              event.preventDefault();\n            }}\n          >\n            Login\n          </button>\n        </div>\n      </form>\n    </animated.div>\n  );\n}\n\nexport default UserSignup;\n",{"ruleId":"29","severity":1,"message":"30","line":1,"column":17,"nodeType":"31","messageId":"32","endLine":1,"endColumn":26},{"ruleId":"29","severity":1,"message":"33","line":6,"column":10,"nodeType":"31","messageId":"32","endLine":6,"endColumn":19},{"ruleId":"29","severity":1,"message":"34","line":6,"column":21,"nodeType":"31","messageId":"32","endLine":6,"endColumn":29},{"ruleId":"29","severity":1,"message":"35","line":14,"column":10,"nodeType":"31","messageId":"32","endLine":14,"endColumn":20},{"ruleId":"29","severity":1,"message":"36","line":14,"column":22,"nodeType":"31","messageId":"32","endLine":14,"endColumn":35},{"ruleId":"29","severity":1,"message":"30","line":1,"column":17,"nodeType":"31","messageId":"32","endLine":1,"endColumn":26},{"ruleId":"37","severity":1,"message":"38","line":76,"column":9,"nodeType":"39","endLine":76,"endColumn":21},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"29","severity":1,"message":"30","line":1,"column":17,"nodeType":"31","messageId":"32","endLine":1,"endColumn":26},{"ruleId":"29","severity":1,"message":"44","line":11,"column":10,"nodeType":"31","messageId":"32","endLine":11,"endColumn":15},{"ruleId":"29","severity":1,"message":"45","line":11,"column":17,"nodeType":"31","messageId":"32","endLine":11,"endColumn":25},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useSpring' is defined but never used.","'animated' is defined but never used.","'userLogged' is assigned a value but never used.","'setUserLogged' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["46"],"no-negated-in-lhs",["47"],"'login' is assigned a value but never used.","'setLogin' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]