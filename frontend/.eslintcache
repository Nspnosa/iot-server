[{"E:\\projects\\iot-server\\frontend\\src\\index.js":"1","E:\\projects\\iot-server\\frontend\\src\\components\\UserLogin.js":"2","E:\\projects\\iot-server\\frontend\\src\\components\\UserSignup.js":"3","E:\\projects\\iot-server\\frontend\\src\\components\\Recovery.js":"4","E:\\projects\\iot-server\\frontend\\src\\components\\Welcome.js":"5","E:\\projects\\iot-server\\frontend\\src\\components\\NavBar.js":"6","E:\\projects\\iot-server\\frontend\\src\\components\\Message.js":"7","E:\\projects\\iot-server\\frontend\\src\\components\\ResetAccount.js":"8","E:\\projects\\iot-server\\frontend\\src\\components\\Dashboard.js":"9","E:\\projects\\iot-server\\frontend\\src\\components\\Device.js":"10","E:\\projects\\iot-server\\frontend\\src\\components\\AddDevice.js":"11","E:\\projects\\iot-server\\frontend\\src\\components\\EditDevice.js":"12"},{"size":2779,"mtime":1610452243379,"results":"13","hashOfConfig":"14"},{"size":3843,"mtime":1610621224067,"results":"15","hashOfConfig":"14"},{"size":3908,"mtime":1610621224067,"results":"16","hashOfConfig":"14"},{"size":2146,"mtime":1610621224067,"results":"17","hashOfConfig":"14"},{"size":441,"mtime":1610304502872,"results":"18","hashOfConfig":"14"},{"size":1285,"mtime":1610319096096,"results":"19","hashOfConfig":"14"},{"size":522,"mtime":1610410668438,"results":"20","hashOfConfig":"14"},{"size":1983,"mtime":1610621224067,"results":"21","hashOfConfig":"14"},{"size":2114,"mtime":1610705560531,"results":"22","hashOfConfig":"14"},{"size":2425,"mtime":1610705640146,"results":"23","hashOfConfig":"14"},{"size":3189,"mtime":1610621224067,"results":"24","hashOfConfig":"14"},{"size":4631,"mtime":1610709152888,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"pc9bt9",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\projects\\iot-server\\frontend\\src\\index.js",[],["57","58"],"E:\\projects\\iot-server\\frontend\\src\\components\\UserLogin.js",["59"],"import React, { useEffect, useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { useHistory, Link } from 'react-router-dom';\n\nfunction UserLogin({ userLogged, setUserLogged, ...rest }) {\n  const history = useHistory();\n  const [inputData, setInputData] = useState({\n    email: '',\n    password: '',\n  });\n  const [msg, setMsg] = useState('');\n\n  const [remember, setRemember] = useState(true);\n  const props = useSpring({ opacity: 1, from: { opacity: 0 } });\n\n  function handleInputChange(event) {\n    setInputData({\n      ...inputData,\n      [event.currentTarget.id.split('-')[0]]: event.currentTarget.value,\n    });\n  }\n\n  async function handleOnClick(event) {\n    event.preventDefault();\n    console.log('button clicked');\n    await fetch('/api/login', {\n      method: 'POST',\n      headers: { 'content-type': 'application/json' },\n      body: JSON.stringify({\n        email: inputData.email,\n        password: inputData.password,\n      }),\n    })\n      .then((data) => {\n        return Promise.all([data.json(), data.status]);\n      })\n      .then(([data, status]) => {\n        if (status === 200) {\n          console.log(remember);\n          if (remember) {\n            localStorage.setItem('iot-server-token', data.token);\n          }\n          setUserLogged(status === 200);\n          history.push('/');\n        } else {\n          setMsg(data.msg);\n        }\n      });\n  }\n\n  if (userLogged) {\n    history.push('/');\n  }\n\n  return (\n    <animated.div style={props} className=\"user-login-container\">\n      <form className=\"user-login-form\">\n        <p className=\"user-login-title\">Welcome back, we've missed you!</p>\n        <div className=\"user-login-form-div\">\n          {/* <label htmlFor=\"email-input-element\">Email:</label> */}\n          <input\n            id=\"email-input-element\"\n            placeholder=\"Email\"\n            className=\"user-login-form-div-input\"\n            type=\"email\"\n            onChange={handleInputChange}\n            value={inputData.email}\n            required={true}\n            minLength={2}\n          />\n        </div>\n        <div className=\"user-login-form-div\">\n          {/* <label htmlFor=\"password-input-element\">Password:</label> */}\n          <input\n            placeholder=\"Password\"\n            id=\"password-input-element\"\n            className=\"user-login-form-div-input\"\n            type=\"password\"\n            onChange={handleInputChange}\n            value={inputData.password}\n            required={true}\n            minLength={8}\n          />\n        </div>\n        <div className=\"user-login-form-div\">\n          <button\n            className=\"user-login-form-div-button\"\n            onClick={handleOnClick}\n          >\n            Log in\n          </button>\n        </div>\n        <div className=\"user-login-form-div\">\n          <button\n            className={`user-login-form-div-button-remember-${\n              remember ? 'on' : 'off'\n            } user-login-form-div-button-remember`}\n            onClick={(event) => {\n              event.preventDefault();\n              setRemember(!remember);\n            }}\n          ></button>\n          <label htmlFor=\"remember-me-button\">\n            <i>Remember?</i>\n          </label>\n        </div>\n        <div className=\"user-login-form-div\">\n          <button\n            className=\"user-create-form-div-button\"\n            onClick={(event) => {\n              event.preventDefault();\n              history.push('/signup');\n            }}\n          >\n            Create account\n          </button>\n        </div>\n      </form>\n      <div style={{ color: 'red', textAlign: 'center' }}>{msg}</div>\n      <div className=\"user-login-lost-credentials-container\">\n        <Link to=\"/recovery\">\n          <i>Forgot password?</i>\n        </Link>\n      </div>\n    </animated.div>\n  );\n}\n\nexport default UserLogin;\n","E:\\projects\\iot-server\\frontend\\src\\components\\UserSignup.js",["60","61"],"import React, { useEffect, useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { useHistory, Link } from 'react-router-dom';\n\nfunction UserSignup({ userLogged }) {\n  const history = useHistory();\n  const [inputData, setInputData] = useState({\n    name: '',\n    lastname: '',\n    email: '',\n    password: '',\n  });\n  const [msg, setMsg] = useState('');\n  const props = useSpring({ opacity: 1, from: { opacity: 0 } });\n\n  async function handleOnClick(event) {\n    await fetch('/api/signup', {\n      method: 'POST',\n      headers: { 'content-type': 'application/json' },\n      body: JSON.stringify({\n        name: inputData.name,\n        lastname: inputData.lastname,\n        email: inputData.email,\n        password: inputData.password,\n      }),\n    })\n      .then((data) => {\n        return Promise.all([data.json(), data.status]);\n      })\n      .then(([data, status]) => {\n        if (status === 200) {\n          history.push('/');\n        } else {\n          setMsg(data.msg);\n        }\n      });\n\n    event.preventDefault();\n  }\n\n  function handleInputChange(event) {\n    setInputData({\n      ...inputData,\n      [event.currentTarget.id.split('-')[0]]: event.currentTarget.value,\n    });\n  }\n  if (userLogged) {\n    history.push('/');\n  }\n  return (\n    <animated.div style={props} className=\"user-signup-container\">\n      <form className=\"user-signup-form\">\n        <p className=\"user-login-title\">Oh, you are going to love this!</p>\n        <div className=\"user-login-form-div\">\n          {/* <label htmlFor=\"name-input-element\">Name:</label> */}\n          <input\n            id=\"name-input-element\"\n            placeholder=\"Name\"\n            className=\"user-login-form-div-input\"\n            type=\"text\"\n            onChange={handleInputChange}\n            value={inputData.name}\n            required={true}\n            minLength={2}\n          />\n        </div>\n        <div className=\"user-login-form-div\">\n          {/* <label htmlFor=\"lastname-input-element\">Lastname:</label> */}\n          <input\n            id=\"lastname-input-element\"\n            placeholder=\"Lastname\"\n            className=\"user-login-form-div-input\"\n            type=\"text\"\n            onChange={handleInputChange}\n            value={inputData.lastname}\n            required={true}\n            minLength={2}\n          />\n        </div>\n        <div className=\"user-login-form-div\">\n          {/* <label htmlFor=\"email-input-element\">Username:</label> */}\n          <input\n            id=\"email-input-element\"\n            placeholder=\"Email\"\n            className=\"user-login-form-div-input\"\n            type=\"email\"\n            onChange={handleInputChange}\n            value={inputData.email}\n            required={true}\n          />\n        </div>\n        <div className=\"user-login-form-div\">\n          {/* <label htmlFor=\"password-input-element\">Password:</label> */}\n          <input\n            placeholder=\"Password\"\n            id=\"password-input-element\"\n            className=\"user-login-form-div-input\"\n            type=\"password\"\n            onChange={handleInputChange}\n            value={inputData.password}\n            required={true}\n            minLength={8}\n          />\n        </div>\n        <div className=\"user-login-form-div\">\n          <button\n            className=\"user-login-form-div-button\"\n            onClick={handleOnClick}\n          >\n            Create account\n          </button>\n        </div>\n        <div className=\"user-login-form-div\">\n          <div></div>\n          <button\n            className=\"user-create-form-div-button\"\n            onClick={(event) => {\n              event.preventDefault();\n              history.push('/login');\n            }}\n          >\n            Login\n          </button>\n        </div>\n      </form>\n      <div style={{ color: 'red', textAlign: 'center' }}>{msg}</div>\n    </animated.div>\n  );\n}\n\nexport default UserSignup;\n","E:\\projects\\iot-server\\frontend\\src\\components\\Recovery.js",["62"],"import React, { useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport Message from './Message';\nimport { useHistory, Link } from 'react-router-dom';\n\nfunction Recovery({ userLogged, ...rest }) {\n  const history = useHistory();\n  const [formData, setFormData] = useState('');\n  const [msg, setMsg] = useState('');\n  const [emailSent, setEmailSent] = useState(false);\n\n  const props = useSpring({ opacity: 1, from: { opacity: 0 } });\n\n  function handleInputChange(event) {\n    setFormData(event.currentTarget.value);\n  }\n\n  async function handleOnClick(event) {\n    await fetch('/api/loginrecovery', {\n      method: 'POST',\n      headers: { 'content-type': 'application/json' },\n      body: JSON.stringify({\n        email: formData,\n      }),\n    })\n      .then((data) => Promise.all([data.json(), data.status]))\n      .then(([data, status]) => {\n        if (status === 200) {\n          setEmailSent(true);\n          setMsg('');\n        } else {\n          setMsg(data.msg);\n        }\n      });\n    event.preventDefault();\n  }\n\n  if (userLogged) {\n    history.push('/');\n  }\n\n  if (!emailSent) {\n    return (\n      <animated.div style={props} className=\"user-recovery-container\">\n        <form className=\"user-signup-form\">\n          <p className=\"user-login-title\">Wait... Who are you again?</p>\n          <div className=\"user-login-form-div\">\n            <input\n              required={true}\n              id=\"email-input-element\"\n              placeholder=\"Email\"\n              className=\"user-login-form-div-input\"\n              type=\"email\"\n              onChange={handleInputChange}\n              value={formData}\n            />\n          </div>\n          <div className=\"user-login-form-div\">\n            <button\n              className=\"user-login-form-div-button\"\n              onClick={handleOnClick}\n            >\n              Send email recovery\n            </button>\n          </div>\n        </form>\n        <div style={{ color: 'red', textAlign: 'center' }}>{msg}</div>\n      </animated.div>\n    );\n  } else {\n    return <Message messages={['Please check you email']} />;\n  }\n}\n\nexport default Recovery;\n","E:\\projects\\iot-server\\frontend\\src\\components\\Welcome.js",["63"],"import React, { useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\n\nfunction Welcome({ type, ...rest }) {\n  const props = useSpring({ opacity: 1, from: { opacity: 0 } });\n\n  return (\n    <animated.div style={props} className=\"user-welcome-container\">\n      <p style={{ textAlign: 'center' }}>WELCOME TO</p>\n      <p style={{ textAlign: 'center' }}>IOT-SERVER</p>\n    </animated.div>\n  );\n}\n\nexport default Welcome;\n",["64","65"],"E:\\projects\\iot-server\\frontend\\src\\components\\NavBar.js",[],"E:\\projects\\iot-server\\frontend\\src\\components\\Message.js",["66"],"import React, { useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\n\nfunction Message({ messages, ...rest }) {\n  const props = useSpring({ opacity: 1, from: { opacity: 0 } });\n\n  return (\n    <animated.div style={props} className=\"user-welcome-container\">\n      {messages.map((message, index) => {\n        return (\n          <p key={index} style={{ textAlign: 'center' }}>\n            {message.toUpperCase()}\n          </p>\n        );\n      })}\n    </animated.div>\n  );\n}\n\nexport default Message;\n","E:\\projects\\iot-server\\frontend\\src\\components\\ResetAccount.js",[],"E:\\projects\\iot-server\\frontend\\src\\components\\Dashboard.js",["67","68"],"E:\\projects\\iot-server\\frontend\\src\\components\\Device.js",[],"E:\\projects\\iot-server\\frontend\\src\\components\\AddDevice.js",[],"E:\\projects\\iot-server\\frontend\\src\\components\\EditDevice.js",["69"],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":26},{"ruleId":"74","severity":1,"message":"75","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":26},{"ruleId":"74","severity":1,"message":"78","line":3,"column":22,"nodeType":"76","messageId":"77","endLine":3,"endColumn":26},{"ruleId":"74","severity":1,"message":"78","line":4,"column":22,"nodeType":"76","messageId":"77","endLine":4,"endColumn":26},{"ruleId":"74","severity":1,"message":"79","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"70","replacedBy":"80"},{"ruleId":"72","replacedBy":"81"},{"ruleId":"74","severity":1,"message":"79","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"74","severity":1,"message":"82","line":5,"column":10,"nodeType":"76","messageId":"77","endLine":5,"endColumn":19},{"ruleId":"83","severity":1,"message":"84","line":41,"column":6,"nodeType":"85","endLine":41,"endColumn":29,"suggestions":"86"},{"ruleId":"74","severity":1,"message":"87","line":1,"column":21,"nodeType":"76","messageId":"77","endLine":1,"endColumn":31},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useState' is defined but never used.",["88"],["89"],"'useSpring' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUserData'. Either include it or remove the dependency array.","ArrayExpression",["90"],"'useReducer' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Update the dependencies array to be: [closeDisplayAddDevice, fetchUserData]",{"range":"93","text":"94"},[1172,1195],"[closeDisplayAddDevice, fetchUserData]"]